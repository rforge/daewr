if (c[1]<0) P1<-P1-pr1[1, ]
P2<-pr2[1, ]+pr2[r[2]-c2+1, ]
if (c[2]<0) P2<-P2-pr2[1, ]
P3<-pr3[1, ]+pr3[r[3]-c[3]+1, ]
P4<-pr4[1, ]+pr4[r[4]-c[4]+1, ]
P5<-pr5[1, ]+pr5[r[5]-c[5]+1, ]
P6<-pr6[1, ]+pr6[r[6]-c[6]+1, ]
P7<-pr7[1, ]+pr7[r[7]-c[7]+1, ]
ASN<-P1*n[1]+P2*(n[1]+n[2])+P3*(n[1]+n[2]+n[3])+P4*(n[1]+n[2]+n[3]+n[4])+P5*(n[1]+n[2]+n[3]+n[4]+n[5])+P6*(n[1]+n[2]+n[3]+n[4]+n[5]+n[6])+P7*(n[1]+n[2]+n[3]+n[4]+n[5]+n[6]+n[7])
data.frame(pd,OC,ASN)
}
OCASNZ4M(plan,pd)
OCASNZ4D<-function(plan,pd) {
# Here is where the function OCASN starts
x<-length(pd)
n<-plan[ ,1]
c<-plan[ ,2]
r<-plan[ ,3]
ns<-length(n)
# First Sample
pr1<-array(rep(0,r[1]-c[1]+1*x),dim=c((r[1]-c[1]+1),x))
nd1<-array(rep(0,r[1]-c[1]+1*x),dim=c((r[1]-c[1]+1),x))
nd1[1]<-c[1]
for (j in 2:(r[1]-c[1]+1)) {nd1[j]<-nd1[j-1]+1}
pr1[1,1:x]<-pbinom(c[1],n[1],pd)
for (i in 2:(r[1]-c[1]) ) {pr1[i,1:x]<-dbinom(c[1]+i-1,n[1],pd)
#print(i)
#print(c[1]+i-1)
#print(dbinom(c[1]+i-1,n[1],pd))
}
pr1[r[1]-c[1]+1,1:x]<-1-pbinom(r[1]-1,n[1],pd)
# Second Sample
pr2<-array(rep(0,(r[2]-c[2]+1)*x),dim=c((r[2]-c[2]+1),x))
nd2<-array(rep(0,(r[2]-c[2]+1)*x),dim=c((r[2]-c[2]+1),x))
nd2[1]<-c[2]
for (j in 2:(r[2]-c[2]+1)) {nd2[j]<-nd2[j-1]+1}
pr2[1]<-0
# Case where accept on 2
## Note if r[2]>C[2]+1 using reduced samplng
## then accept for any nc count less than or
## equal to r[2]-1, but return to normal inspection
## for the next lot
ce<-r[2]-1
for (j in 2:(r[1]-c[1])) {
#   bin<-pbinom(c[2]-nd1[j],n[2],pd)
bin<-pbinom(ce-nd1[j],n[2],pd)
pr2[1,]<-pr2[1,]+pr1[j,]*bin
}
# Case where reject on 2
pr2[r[2]-c[2]+1]<-0
for (j in 2:(r[1]-c[1])) {
bin<-1-(pbinom(r[2]-nd1[j]-1,n[2],pd))
pr2[r[2]-c[2]+1,]<-pr2[r[2]-c[2]+1,]+pr1[j,]*bin
}
#prob accept OC
OC<-pr1[1, ]+pr2[1, ]
#Prob reject
Rej<-pr1[r[1]-c[1]+1, ]+pr2[r[2]-c[2]+1, ]
# Prob of Decision
P1<-pr1[1, ]+pr1[r[1]-c[1]+1, ]
P2<-pr2[1, ]+pr2[r[2]-c[2]+1, ]
ASN<-P1*n[1]+P2*(n[1]+n[2])
data.frame(pd,OC,ASN)
}
#Code=M AQL=.004
n<-c(80,80,80,80,80,80,80)
c<-c(-1,-1,0,0,1,1,2)
r<-c(2,2,2,3,3,3,3)
pd<-seq(.002,.022, by=.002)
plan<-data.frame(n,c,r)
plan
OCASNZ4M(plan,pd)
AAZ14Double<-function(PLAN,INSL,LOTS,AQL){
# Get the inspection level
dINSL <- menu(c("S-1", "S-2", "S-3", "S-4",
"I", "II", "III"), title = "\nWhat is the Inspection Level?")
INSL
# Get the lot size
dLOTS <- menu(c("2-8", "9-15", "16-25", "26-50",
"51-90", "91-150", "151-280", "281-500",
"501-1200", "1201-3200", "3201-10,000",
"10,001-35,000", "35,001-150,000", "150,001-500,000",
"500,001 and over"), title = "\nWhat is the Lot Size?")
LOTS
# Get the AQL
dAQL <- menu(c("0.010","0.015","0.025","0.040","0.065","0.10","0.15","0.25",
"0.40","0.65","1.0","1.5","2.5","4.0","6.5","10",
"15","25","40","65","100","150","250","400","650","1000"),
title = "\nWhat is the AQL in percent nonconforming per 100 items?")
AQL
#Create matrix of Code Letters
codes<-c("A","B","C","D","E","F","G","H","J","K","L","M","N","P","Q","R")
InspLev<-c("S-1","S-2","S-3","S-4","I","II","III")
LotSize<-c("2-8","9-15","16-25","26-50","51-90","91-150","151-280","281-500","501-1200","1201-3200","3201-10,000","10,001-35,000","35,001-150,000","150,001-500,000","over 500,001")
AQL<-c("0.010","0.015","0.025","0.040","0.065","0.10","0.15","0.25","0.40","0.65","1.0","1.5","2.5","4.0","6.5","10","15","25","40","65","100","150","250","400","650","1000")
letters<-c("A","A","A","A","A","A","B",
"A","A","A","A","A","B","C",
"A","A","B","B","B","C","D",
"A","B","B","C","C","D","E",
"B","B","C","C","C","E","F",
"B","B","C","D","D","F","G",
"B","C","D","E","E","G","H",
"B","C","D","E","F","H","J",
"C","C","E","F","G","J","K",
"C","D","E","G","H","K","L",
"C","D","F","G","J","L","M",
"C","D","F","H","K","M","N",
"D","E","G","J","L","N","P",
"D","E","G","J","M","P","Q",
"D","E","H","K","N","Q","R")
SSCodeLetters<-matrix(letters,nrow=15, byrow=TRUE)
rownames(SSCodeLetters)<-LotSize
colnames(SSCodeLetters)<-InspLev
#Create Matrix of Double Sample Sizes for Normal Sampling
temp<-array(c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,2,2,2,2,2,2,2,2,2,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,2,2,2,2,2,2,2,2,2,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,3,3,3,3,3,3,3,3,3,2,
0,0,0,0,0,0,0,0,0,0,0,0,0,8,5,5,5,5,5,5,5,5,5,5,3,2,
0,0,0,0,0,0,0,0,0,0,0,0,13,8,8,8,8,8,8,8,8,8,8,5,3,2,
0,0,0,0,0,0,0,0,0,0,0,20,13,13,13,13,13,13,13,13,8,8,8,5,3,2,
0,0,0,0,0,0,0,0,0,0,32,20,20,20,20,20,20,20,20,13,8,8,8,5,3,2,
0,0,0,0,0,0,0,0,0,50,32,32,32,32,32,32,32,32,20,13,8,8,8,5,3,2,
0,0,0,0,0,0,0,0,80,50,50,50,50,50,50,50,50,32,20,13,8,8,8,5,3,2,
0,0,0,0,0,0,0,125,80,80,80,80,80,80,80,80,50,32,20,13,8,8,8,5,3,2,
0,0,0,0,0,0,200,125,125,125,125,125,125,125,125,80,50,32,20,13,8,8,8,5,3,2,
0,0,0,0,0,315,200,200,200,200,200,200,200,200,125,80,50,32,20,13,8,8,8,5,3,2,
0,0,0,0,500,315,315,315,315,315,315,315,315,200,125,80,50,32,20,13,8,8,8,5,3,2,
0,0,0,800,500,500,500,500,500,500,500,500,315,200,125,80,50,32,20,13,8,8,8,5,3,2,
0,0,1250,800,800,800,800,800,800,800,800,500,315,200,125,80,50,32,20,13,8,8,8,5,3,2,
0,0,1250,1250,1250,1250,1250,1250,1250,1250,800,500,315,200,125,80,50,32,20,13,8,8,8,5,3,2),
dim=c(26,16))
ANSIASQDoubleNormalss <- t(temp)
rownames(ANSIASQDoubleNormalss)<-codes
colnames(ANSIASQDoubleNormalss)<-AQL
#Create Matrix of Double Sample Sizes for Tightened Sampling
temp<-array(c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,2,2,2,2,2,2,2,2,2,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,2,2,2,2,2,2,2,2,2,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,5,3,3,3,3,3,3,3,3,3,2,
0,0,0,0,0,0,0,0,0,0,0,0,0,13,8,5,5,5,5,5,5,5,5,5,3,2,
0,0,0,0,0,0,0,0,0,0,0,0,20,13,8,8,8,8,8,8,8,8,8,5,3,2,
0,0,0,0,0,0,0,0,0,0,0,32,20,13,13,13,13,13,13,13,8,8,8,5,3,2,
0,0,0,0,0,0,0,0,0,0,50,32,20,20,20,20,20,20,20,13,8,8,8,5,3,2,
0,0,0,0,0,0,0,0,0,80,50,32,32,32,32,32,32,32,20,13,8,8,8,5,3,2,
0,0,0,0,0,0,0,0,125,80,50,50,50,50,50,50,50,32,20,13,8,8,8,5,3,2,
0,0,0,0,0,0,0,200,125,80,80,80,80,80,80,80,50,32,20,13,8,8,8,5,3,2,
0,0,0,0,0,0,315,200,125,125,125,125,125,125,125,80,50,32,20,13,8,8,8,5,3,2,
0,0,0,0,0,500,315,200,200,200,200,200,200,200,125,80,50,32,20,13,8,8,8,5,3,2,
0,0,0,0,800,500,315,315,315,315,315,315,315,200,125,80,50,32,20,13,8,8,8,5,3,2,
0,0,0,1250,800,500,500,500,500,500,500,500,315,200,125,80,50,32,20,13,8,8,8,5,3,2,
0,0,2000,1250,800,800,800,800,800,800,800,500,315,200,125,80,50,32,20,13,8,8,8,5,3,2,
0,0,2000,1250,1250,1250,1250,1250,1250,1250,800,500,315,200,125,80,50,32,20,13,8,8,8,5,3,2),
dim=c(26,16))
ANSIASQDoubleTightenedss<-t(temp)
rownames(ANSIASQDoubleTightenedss)<-codes
colnames(ANSIASQDoubleTightenedss)<-AQL
#Create Matrix of Double Sample Sizes for Reduced Sampling
temp<-array(c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,2,2,2,2,2,2,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,2,2,2,2,2,2,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,2,2,2,2,2,2,2,2,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,5,3,2,2,2,2,2,2,2,2,2,2,0,0,
0,0,0,0,0,0,0,0,0,0,0,8,5,3,3,3,3,3,3,3,3,3,3,2,0,0,
0,0,0,0,0,0,0,0,0,0,13,8,5,5,5,5,5,5,5,5,3,3,3,2,0,0,
0,0,0,0,0,0,0,0,0,20,13,8,8,8,8,8,8,8,8,5,3,3,3,2,0,0,
0,0,0,0,0,0,0,0,32,20,13,13,13,13,13,13,13,13,8,5,3,3,3,2,0,0,
0,0,0,0,0,0,0,50,32,20,20,20,20,20,20,20,20,13,8,5,3,3,3,2,0,0,
0,0,0,0,0,0,80,50,32,32,32,32,32,32,32,32,20,13,8,5,3,3,3,2,0,0,
0,0,0,0,0,125,80,50,50,50,50,50,50,50,50,32,20,13,8,5,3,3,3,2,0,0,
0,0,0,0,200,125,80,80,80,80,80,80,80,80,50,32,20,13,8,5,3,3,3,2,0,0,
0,0,0,315,200,125,125,125,125,125,125,125,125,80,50,32,20,13,8,5,3,3,3,2,0,0,
0,0,500,315,200,200,200,200,200,200,200,200,125,80,50,32,20,13,8,5,3,3,3,2,0,0,
0,0,500,315,315,315,315,315,315,315,315,200,125,80,50,32,20,13,8,5,3,3,3,2,0,0,
0,0,500,500,500,500,500,500,500,500,315,200,125,80,50,32,20,13,8,5,3,3,3,2,0,0),
dim=c(26,16))
ANSIASQDoubleReducedss<-t(temp)
rownames(ANSIASQDoubleReducedss)<-codes
colnames(ANSIASQDoubleReducedss)<-AQL
#Create array of Acceptance Numbers for Normal Double Sampling
t<-c( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 1, 4,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 4,12,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 4,12, 7,18,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 4,12, 7,18,11,26,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 4,12, 7,18,11,26,11,26,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 4,12, 7,18,11,26,11,26,11,26,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 4,12, 7,18,11,26,11,26,11,26,11,26,
0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 4,12, 7,18,11,26,11,26,11,26,11,26,11,26,
0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 4,12, 7,18,11,26,11,26,11,26,11,26,11,26,11,26,
0, 1, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 5,12, 7,18,11,26,11,26,11,26,11,26,11,26,11,26,11,26,
0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 5,12, 7,18,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,
0, 3, 0, 3, 1, 4, 2, 6, 3, 8, 5,12, 7,18,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,
1, 4, 1, 4, 2, 6, 3, 8, 5,12, 7,18,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,
2, 6, 2, 6, 3, 8, 5,12, 7,18,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,
3, 8, 3, 8, 5,12, 7,18,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,
5,12, 5,12, 7,18,11,26,17,37,17,37,17,37,17,37,17,37,17,37,17,37,17,37,17,37,17,37,17,37,17,37,
7,18, 7,18,11,26,17,37,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,
11,26,11,26,17,37,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,
17,37,17,37,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,
25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56,25,56)
AADoubleNormalac<-array(t, dim=c(2,16,26), dimnames=list(c("first","second"),
c("A","B","C","D","E","F","G","H","J","K","L","M","N","P","Q","R"),
c("0.010","0.015","0.025","0.040","0.065","0.10","0.15",
"0.25","0.40","0.65","1.0","1.5","2.5","4.0","6.5",
"10","15","25","40","65","100","150","250","400","650","1000")))
# Create array of Rejection Numbers for Normal Double Sampling
t<-c( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 4,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 4, 4, 5,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7, 9,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7, 9, 9,13,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7, 9, 9,13,11,19,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7, 9, 9,13,11,19,16,27,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7, 9, 9,13,11,19,16,27,16,27,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7, 9, 9,13,11,19,16,27,16,27,16,27,
0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7, 9, 9,13,11,19,16,27,16,27,16,27,16,27,
0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7, 9, 9,13,11,19,16,27,16,27,16,27,16,27,16,27,
0, 0, 0, 0, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7, 9, 9,13,11,19,16,27,16,27,16,27,16,27,16,27,16,27,
2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7, 9, 9,13,11,19,16,27,16,27,16,27,16,27,16,27,16,27,16,26,
2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7, 9, 9,13,11,19,16,27,16,27,16,27,16,27,16,27,16,27,16,26,16,26,
3, 4, 3, 4, 4, 5, 5, 7, 7, 9, 9,13,11,19,16,27,16,27,16,27,16,27,16,27,16,27,16,26,16,26,16,26,
4, 5, 4, 5, 5, 7, 7, 9, 9,13,11,19,16,27,16,27,16,27,16,27,16,27,16,27,16,26,16,26,16,26,16,26,
5, 7, 5, 7, 7, 9, 9,13,11,19,16,27,16,27,16,27,16,27,16,27,16,27,16,26,16,26,16,26,16,26,16,27,
7, 9, 7, 9, 9,13,11,19,16,27,16,27,16,27,16,27,16,27,16,27,16,26,16,26,16,26,16,26,16,27,16,27,
9,13, 9,13,11,19,16,27,22,38,22,38,22,38,22,38,22,38,22,38,22,38,22,38,22,38,22,38,22,38,22,38,
11,19,11,19,16,27,22,38,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,
16,27,16,27,22,38,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,
22,38,22,38,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,
31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57,31,57)
AADoubleNormalre<-array(t, dim=c(2,16,26), dimnames=list(c("first","second"),
c("A","B","C","D","E","F","G","H","J","K","L","M","N","P","Q","R"),
c("0.010","0.015","0.025","0.040","0.065","0.10","0.15",
"0.25","0.40","0.65","1.0","1.5","2.5","4.0","6.5",
"10","15","25","40","65","100","150","250","400","650","1000")))
# Create array of acceptance numbers for Double Tightened Sampling
t<-c( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 3,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 3, 1, 4,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3,11,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3,11, 6,15,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3,11, 6,15, 9,23,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3,11, 6,15, 9,23, 9,23,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3,11, 6,15, 9,23, 9,23, 9,23,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3,11, 6,15, 9,23, 9,23, 9,23, 9,23,
0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3,11, 6,15, 9,23, 9,23, 9,23, 9,23, 9,23,
0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3,11, 6,15, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23,
0, 1, 0, 1, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3,11, 6,15, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23,
0, 1, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3,11, 6,15, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23,
0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3,11, 6,15, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23,
0, 3, 0, 3, 1, 4, 2, 6, 3,11, 6,15, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23,
1, 4, 1, 4, 2, 6, 3,11, 6,15, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23,
2, 6, 2, 6, 3,11, 6,15, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23, 9,23,
3,11, 3,11, 6,15, 9,23,15,34,15,34,15,34,15,34,15,34,15,34,15,34,15,34,15,34,15,34,15,34,15,34,
6,15, 6,15, 9,23,15,34,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,
9,23, 9,23,15,34,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,
15,34,15,34,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,
23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52,23,52)
AADoubleTightenedac<-array(t, dim=c(2,16,26), dimnames=list(c("first","second"),
c("A","B","C","D","E","F","G","H","J","K","L","M","N","P","Q","R"),
c("0.010","0.015","0.025","0.040","0.065","0.10","0.15",
"0.25","0.40","0.65","1.0","1.5","2.5","4.0","6.5",
"10","15","25","40","65","100","150","250","400","650","1000")))
# Create array of rejection numbers for Double Tightened Sampling
t<-c( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7,12,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7,12,10,16,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7,12,10,16,14,24,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7,12,10,16,14,24,14,24,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7,12,10,16,14,24,14,24,14,24,
0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7,12,10,16,14,24,14,24,14,24,14,24,
0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7,12,10,16,14,24,14,24,14,24,14,24,14,24,
0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7,12,10,16,14,24,14,24,14,24,14,24,14,24,14,24,
2, 2, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7,12,10,16,14,24,14,24,14,24,14,24,14,24,14,24,14,24,
2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7,12,10,16,14,24,14,24,14,24,14,24,14,24,14,24,14,24,14,24,
2, 2, 2, 2, 3, 4, 4, 5, 5, 7, 7,12,10,16,14,24,14,24,14,24,14,24,14,24,14,24,14,24,14,24,14,24,
3, 4, 3, 4, 4, 5, 5, 7, 7,12,10,16,14,24,14,24,14,24,14,24,14,24,14,24,14,24,14,24,14,24,14,24,
4, 5, 4, 5, 5, 7, 7,12,10,16,14,24,14,24,14,24,14,24,14,24,14,24,14,24,14,24,14,24,14,24,14,24,
5, 7, 5, 7, 7,12,10,16,14,24,14,24,14,24,14,24,14,24,14,24,14,24,14,24,14,24,14,24,14,24,14,24,
7,12, 7,12,10,16,14,24,20,35,20,35,20,35,20,35,20,35,20,35,20,35,20,35,20,35,20,35,20,35,20,35,
10,16,10,16,14,24,20,35,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,
14,24,14,24,20,35,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,
20,35,20,35,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,
29, 53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53,29,53)
AADoubleTightenedre<-array(t, dim=c(2,16,26), dimnames=list(c("first","second"),
c("A","B","C","D","E","F","G","H","J","K","L","M","N","P","Q","R"),
c("0.010","0.015","0.025","0.040","0.065","0.10","0.15",
"0.25","0.40","0.65","1.0","1.5","2.5","4.0","6.5",
"10","15","25","40","65","100","150","250","400","650","1000")))
# Create array of acceptance numbers for Double Reduced Sampling
t<-c( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 4,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 4, 2, 6,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 5,12,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 5,12, 5,12,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 5,12, 5,12, 5,12,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 5,12, 5,12, 5,12, 5,12,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 5,12, 5,12, 5,12, 5,12, 5,12,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12,
0, 1, 0, 1, 0, 1, 0, 1, 0, 3, 1, 4, 2, 6, 3, 8, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12,
0, 3, 0, 3, 0, 3, 0, 3, 1, 4, 2, 6, 3, 8, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12,
1, 4, 1, 4, 1, 4, 1, 4, 2, 6, 3, 8, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12,
2, 6, 2, 6, 2, 6, 2, 6, 3, 8, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12,
3, 8, 3, 8, 3, 8, 3, 8, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12, 5,12,
5,12, 5,12, 5,12, 5,12, 7,18, 7,18, 7,18, 7,18, 7,18, 7,18, 7,18, 7,18, 7,18, 7,18, 7,18, 7,18,
7,18, 7,18, 7,18, 7,18,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,
11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,11,26,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
AADoubleReducedac<-array(t, dim=c(2,16,26), dimnames=list(c("first","second"),
c("A","B","C","D","E","F","G","H","J","K","L","M","N","P","Q","R"),
c("0.010","0.015","0.025","0.040","0.065","0.10","0.15",
"0.25","0.40","0.65","1.0","1.5","2.5","4.0","6.5",
"10","15","25","40","65","100","150","250","400","650","1000")))
# Create array of rejection numbers for Double Reduced Sampling
t<-c( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 4, 6,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 4, 6, 5, 7,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 4, 6, 5, 7, 7, 9,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 4, 6, 5, 7, 7, 9, 8,12,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 4, 6, 5, 7, 7, 9, 8,12,10,16,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 4, 6, 5, 7, 7, 9, 8,12,10,16,10,16,
0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 4, 6, 5, 7, 7, 9, 8,12,10,16,10,16,10,16,
0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 4, 6, 5, 7, 7, 9, 8,12,10,16,10,16,10,16,10,16,
0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 4, 6, 5, 7, 7, 9, 8,12,10,16,10,16,10,16,10,16,10,16,
0, 0, 2, 2, 2, 2, 2, 2, 3, 4, 4, 5, 4, 6, 5, 7, 7, 9, 8,12,10,16,10,16,10,16,10,16,10,16,10,16,
3, 4, 3, 4, 3, 4, 3, 4, 4, 5, 4, 6, 5, 7, 7, 9, 8,12,10,16,10,16,10,16,10,16,10,16,10,16,10,16,
4, 5, 4, 5, 4, 5, 4, 5, 4, 6, 5, 7, 7, 9, 8,12,10,16,10,16,10,16,10,16,10,16,10,16,10,16,10,16,
4, 6, 4, 6, 4, 6, 4, 6, 5, 7, 7, 9, 8,12,10,16,10,16,10,16,10,16,10,16,10,16,10,16,10,16,10,16,
5, 7, 5, 7, 5, 7, 5, 7, 7, 9, 8,12,10,16,10,16,10,16,10,16,10,16,10,16,10,16,10,16,10,16,10,16,
7, 9, 7, 9, 7, 9, 7, 9, 8,12,10,16,10,16,10,16,10,16,10,16,10,16,10,16,10,16,10,16,10,16,10,16,
8,12, 8,12, 8,12, 8,12,10,16,10,16,10,16,10,16,10,16,10,16,10,16,10,16,10,16,10,16,10,16,10,16,
10,16,10,16,10,16,10,16,12,22,12,22,12,22,12,22,12,22,12,22,12,22,12,22,12,22,12,22,12,22,12,22,
12,22,12,22,12,22,12,22,17,30,17,30,17,30,17,30,17,30,17,30,17,30,17,30,17,30,17,30,17,30,17,30,
17,30,17,30,17,30,17,30,17,30,17,30,17,30,17,30,17,30,17,30,17,30,17,30,17,30,17,30,17,30,17,30,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
AADoubleReducedre<-array(t, dim=c(2,16,26), dimnames=list(c("first","second"),
c("A","B","C","D","E","F","G","H","J","K","L","M","N","P","Q","R"),
c("0.010","0.015","0.025","0.040","0.065","0.10","0.15",
"0.25","0.40","0.65","1.0","1.5","2.5","4.0","6.5",
"10","15","25","40","65","100","150","250","400","650","1000")))
# Get Code letter from SSCodeLetters
codelet<-SSCodeLetters[dLOTS,dINSL]
if(PLAN == 1) {
#   print(PLAN)
#   print(dINSL)
#   print(dLOTS)
#   print(codelet)
#   print(dAQL)
ac<-AADoubleNormalac[ ,codelet,dAQL]
re<-AADoubleNormalre[ ,codelet,dAQL]
S<-ANSIASQDoubleNormalss[codelet, dAQL]
ss<-c(S,S)
names(ss)<-c("first","second")
} else if(PLAN == 2) {
ac<-AADoubleTightenedac[ ,codelet,dAQL]
re<-AADoubleTightenedre[ ,codelet,dAQL]
S<-ANSIASQDoubleTightenedss[codelet, dAQL]
ss<-c(S,S)
names(ss)<-c("first","second")
} else if(PLAN == 3) {
ac<-AADoubleReducedac[ ,codelet,dAQL]
re<-AADoubleReducedre[ ,codelet,dAQL]
S<-ANSIASQDoubleReducedss[codelet, dAQL]
ss<-c(S,S)
}
# Print Results
#print("Sample size"); print(ss)
#print("Acceptance no."); print(ac)
#print("Rejection no.");print(re)
#plan<-data.frame(n=ss,c=ac,r=re)
if(ac==c(0,0) && re==c(0,0)) {
print("No double sampling plan exists. Use the corresponding single sampling plan")
} else {plan<-data.frame(n=ss,c=ac,r=re)
return(plan)}
}
AADouble <- function(type="Normal") {
message1<-"type must be equal to 'Normal' 'Reduced' or 'Tightened'"
if(type == "Normal"){
iplan <- 1
} else if (type == "Tightened"){
iplan <- 2
} else if (type == "Reduced"){
iplan <- 3
} else {
iplan<-4
}
if(iplan==4) {print(message1)} else
{plan<-AAZ14Double(PLAN=iplan,INSL=1,LOTS=1,AQL=1)
return(plan)}
}
AADouble('Normal')
AADouble("Normal")
plan<-AADouble('Normal')
plan
OCASNZ4D<-function(plan,pd) {
# Here is where the function OCASN starts
x<-length(pd)
n<-plan[ ,1]
c<-plan[ ,2]
r<-plan[ ,3]
ns<-length(n)
# First Sample
pr1<-array(rep(0,r[1]-c[1]+1*x),dim=c((r[1]-c[1]+1),x))
nd1<-array(rep(0,r[1]-c[1]+1*x),dim=c((r[1]-c[1]+1),x))
nd1[1]<-c[1]
for (j in 2:(r[1]-c[1]+1)) {nd1[j]<-nd1[j-1]+1}
pr1[1,1:x]<-pbinom(c[1],n[1],pd)
for (i in 2:(r[1]-c[1]) ) {pr1[i,1:x]<-dbinom(c[1]+i-1,n[1],pd)
#print(i)
#print(c[1]+i-1)
#print(dbinom(c[1]+i-1,n[1],pd))
}
pr1[r[1]-c[1]+1,1:x]<-1-pbinom(r[1]-1,n[1],pd)
# Second Sample
pr2<-array(rep(0,(r[2]-c[2]+1)*x),dim=c((r[2]-c[2]+1),x))
nd2<-array(rep(0,(r[2]-c[2]+1)*x),dim=c((r[2]-c[2]+1),x))
nd2[1]<-c[2]
for (j in 2:(r[2]-c[2]+1)) {nd2[j]<-nd2[j-1]+1}
pr2[1]<-0
# Case where accept on 2
## Note if r[2]>C[2]+1 using reduced samplng
## then accept for any nc count less than or
## equal to r[2]-1, but return to normal inspection
## for the next lot
ce<-r[2]-1
for (j in 2:(r[1]-c[1])) {
#   bin<-pbinom(c[2]-nd1[j],n[2],pd)
bin<-pbinom(ce-nd1[j],n[2],pd)
pr2[1,]<-pr2[1,]+pr1[j,]*bin
}
# Case where reject on 2
pr2[r[2]-c[2]+1]<-0
for (j in 2:(r[1]-c[1])) {
bin<-1-(pbinom(r[2]-nd1[j]-1,n[2],pd))
pr2[r[2]-c[2]+1,]<-pr2[r[2]-c[2]+1,]+pr1[j,]*bin
}
#prob accept OC
OC<-pr1[1, ]+pr2[1, ]
#Prob reject
Rej<-pr1[r[1]-c[1]+1, ]+pr2[r[2]-c[2]+1, ]
# Prob of Decision
P1<-pr1[1, ]+pr1[r[1]-c[1]+1, ]
P2<-pr2[1, ]+pr2[r[2]-c[2]+1, ]
ASN<-P1*n[1]+P2*(n[1]+n[2])
data.frame(pd,OC,ASN)
}
plan
pd<-seq(.002,.022, by=.002)
OCASNZ4D(plan,pd)
install.packages("~/r-forge-project/AQLSchemes_1.1.zip", repos = NULL, type = "win.binary")
library("AQLSchemes", lib.loc="~/R/win-library/3.5")
AADouble('Normal')
install.packages("~/r-forge-project/AQLSchemes_1.3.zip", repos = NULL, type = "win.binary")
library("AQLSchemes", lib.loc="~/R/win-library/3.5")
planS<-AAsingle('Normal')
library(AQLSchemes)
planS<-AASingle('Normal')
planS
class(planS)
detach("package:AQLSchemes", unload=TRUE)
install.packages("~/r-forge-project/AQLSchemes_1.4.zip", repos = NULL, type = "win.binary")
library("AQLSchemes", lib.loc="~/R/win-library/3.5")
detach("package:AQLSchemes", unload=TRUE)
install.packages("~/r-forge-project/AQLSchemes_1.4.zip", repos = NULL, type = "win.binary")
library("AQLSchemes", lib.loc="~/R/win-library/3.5")
planM<-AAMultiple('Normal')
planM
detach("package:AQLSchemes", unload=TRUE)
install.packages("~/r-forge-project/AQLSchemes_1.5.zip", repos = NULL, type = "win.binary")
library("AQLSchemes", lib.loc="~/R/win-library/3.5")
planM<-AAMultiple('Normal')
planM
remove.packages("AQLSchemes", lib="~/R/win-library/3.5")
install.packages("~/r-forge-project/AQLSchemes_1.5.1.zip", repos = NULL, type = "win.binary")
knitr::opts_chunk$set(echo = TRUE)
library(qualityTools)
gRR<-gageRRDesign(Parts=7,Operators=3,Measurements=3,randomize=FALSE)
d<-c(12.37,12.75,12.72,12.73,12.70,12.70,12.69,12.79,12.72,12.78,12.74,12.75,12.72,12.73,12.72,
12.66,12.62,12.61,12.60,12.59,12.60,
12.72,12.71,12.71,12.60,12.67,12.66,12.68,12.72,12.69,12.71,12.72,12.71,12.66,12.70,12.69,
12.59,12.60,12.60,12.53,12.56,12.57,
12.92,12.80,12.81,12.83,12.79,12.75,12.84,12.80,12.80,12.89,12.82,12.92,12.66,12.80,12.82,
12.55,12.70,12.71,12.79,12.68,12.57)
gRR
