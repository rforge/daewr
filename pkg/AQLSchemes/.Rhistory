0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,4,6,8,12,17,25,37,55,55,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,5,6,9,14,20,29,43,64,64,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,5,7,10,15,22,33,49,73,73,0,0,
0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,4,4,6,8,8,10,15,15,0,0,
0,0,0,0,0,0,0,0,0,0,0,2,2,2,3,3,5,7,9,12,12,17,25,25,0,0,
0,0,0,0,0,0,0,0,0,0,0,2,2,2,3,4,6,9,12,17,17,24,36,36,0,0,
0,0,0,0,0,0,0,0,0,0,0,3,3,3,4,5,7,11,15,22,22,31,46,46,0,0,
0,0,0,0,0,0,0,0,0,0,0,3,3,3,4,6,8,12,17,25,25,37,55,55,0,0,
0,0,0,0,0,0,0,0,0,0,0,3,3,3,5,6,9,14,20,29,29,43,64,64,0,0,
0,0,0,0,0,0,0,0,0,0,0,3,3,3,5,7,10,15,22,33,33,49,73,73,0,0,
0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,4,4,6,8,8,8,10,15,15,0,0,
0,0,0,0,0,0,0,0,0,0,2,2,2,3,3,5,7,9,12,12,12,17,25,25,0,0,
0,0,0,0,0,0,0,0,0,0,2,2,2,3,4,6,9,12,17,17,17,24,36,36,0,0,
0,0,0,0,0,0,0,0,0,0,3,3,3,4,5,7,11,15,22,22,22,31,46,46,0,0,
0,0,0,0,0,0,0,0,0,0,3,3,3,4,6,8,12,17,25,25,25,37,55,55,0,0,
0,0,0,0,0,0,0,0,0,0,3,3,3,5,6,9,14,20,29,29,29,43,64,64,0,0,
0,0,0,0,0,0,0,0,0,0,3,3,3,5,7,10,15,22,33,33,33,49,73,73,0,0,
0,0,0,0,0,0,0,0,0,2,2,2,2,2,4,4,6,8,8,8,8,10,15,15,0,0,
0,0,0,0,0,0,0,0,0,2,2,2,3,3,5,7,9,12,12,12,12,17,25,25,0,0,
0,0,0,0,0,0,0,0,0,2,2,2,3,4,6,9,12,17,17,17,17,24,36,36,0,0,
0,0,0,0,0,0,0,0,0,3,3,3,4,5,7,11,15,22,22,22,22,31,46,46,0,0,
0,0,0,0,0,0,0,0,0,3,3,3,4,6,8,12,17,25,25,25,25,37,55,55,0,0,
0,0,0,0,0,0,0,0,0,3,3,3,5,6,9,14,20,29,29,29,29,43,64,64,0,0,
0,0,0,0,0,0,0,0,0,3,3,3,5,7,10,15,22,33,33,33,33,49,73,73,0,0,
0,0,0,0,0,0,0,0,2,2,2,2,2,4,4,6,8,8,8,8,8,10,15,15,0,0,
0,0,0,0,0,0,0,0,2,2,2,3,3,5,7,9,12,12,12,12,12,17,25,25,0,0,
0,0,0,0,0,0,0,0,2,2,2,3,4,6,9,12,17,17,17,17,17,24,36,36,0,0,
0,0,0,0,0,0,0,0,3,3,3,4,5,7,11,15,22,22,22,22,22,31,46,46,0,0,
0,0,0,0,0,0,0,0,3,3,3,4,6,8,12,17,25,25,25,25,25,37,55,55,0,0,
0,0,0,0,0,0,0,0,3,3,3,5,6,9,14,20,29,29,29,29,29,43,64,64,0,0,
0,0,0,0,0,0,0,0,3,3,3,5,7,10,15,22,33,33,33,33,33,49,73,73,0,0,
0,0,0,0,0,0,0,2,2,2,2,2,4,4,6,8,8,8,8,8,8,10,15,15,0,0,
0,0,0,0,0,0,0,2,2,2,3,3,5,7,9,12,12,12,12,12,12,17,25,25,0,0,
0,0,0,0,0,0,0,2,2,2,3,4,6,9,12,17,17,17,17,17,17,24,36,36,0,0,
0,0,0,0,0,0,0,3,3,3,4,5,7,11,15,22,22,22,22,22,22,31,46,46,0,0,
0,0,0,0,0,0,0,3,3,3,4,6,8,12,17,25,25,25,25,25,25,37,55,55,0,0,
0,0,0,0,0,0,0,3,3,3,5,6,9,14,20,29,29,29,29,29,29,43,64,64,0,0,
0,0,0,0,0,0,0,3,3,3,5,7,10,15,22,33,33,33,33,33,33,49,73,73,0,0,
0,0,0,0,0,0,2,2,2,2,2,4,4,6,8,8,8,8,8,8,8,10,15,15,0,0,
0,0,0,0,0,0,2,2,2,3,3,5,7,9,12,12,12,12,12,12,12,17,25,25,0,0,
0,0,0,0,0,0,2,2,2,3,4,6,9,12,17,17,17,17,17,17,17,24,36,36,0,0,
0,0,0,0,0,0,3,3,3,4,5,7,11,15,22,22,22,22,22,22,22,31,46,46,0,0,
0,0,0,0,0,0,3,3,3,4,6,8,12,17,25,25,25,25,25,25,25,37,55,55,0,0,
0,0,0,0,0,0,3,3,3,5,6,9,14,20,29,29,29,29,29,29,29,43,64,64,0,0,
0,0,0,0,0,0,3,3,3,5,7,10,15,22,33,33,33,33,33,33,33,49,73,73,0,0,
0,0,0,0,0,2,2,2,2,2,4,4,6,8,8,8,8,8,8,8,8,10,15,15,0,0,
0,0,0,0,0,2,2,2,3,3,5,7,9,12,12,12,12,12,12,12,12,17,25,25,0,0,
0,0,0,0,0,2,2,2,3,4,6,9,12,17,17,17,17,17,17,17,17,24,36,36,0,0,
0,0,0,0,0,3,3,3,4,5,7,11,15,22,22,22,22,22,22,22,22,31,46,46,0,0,
0,0,0,0,0,3,3,3,4,6,8,12,17,25,25,25,25,25,25,25,25,37,55,55,0,0,
0,0,0,0,0,3,3,3,5,6,9,14,20,29,29,29,29,29,29,29,29,43,64,64,0,0,
0,0,0,0,0,3,3,3,5,7,10,15,22,33,33,33,33,33,33,33,33,49,73,73,0,0,
0,0,0,0,2,2,2,2,2,4,4,6,8,8,8,8,8,8,8,8,8,10,15,15,0,0,
0,0,0,0,2,2,2,3,3,5,7,9,12,12,12,12,12,12,12,12,12,17,25,25,0,0,
0,0,0,0,2,2,2,3,4,6,9,12,17,17,17,17,17,17,17,17,17,24,36,36,0,0,
0,0,0,0,3,3,3,4,5,7,11,15,22,22,22,22,22,22,22,22,22,31,46,46,0,0,
0,0,0,0,3,3,3,4,6,8,12,17,25,25,25,25,25,25,25,25,25,37,55,55,0,0,
0,0,0,0,3,3,3,5,6,9,14,20,29,29,29,29,29,29,29,29,29,43,64,64,0,0,
0,0,0,0,3,3,3,5,7,10,15,22,33,33,33,33,33,33,33,33,33,49,73,73,0,0,
0,0,0,2,2,2,2,2,4,4,6,8,8,8,8,8,8,8,8,8,8,10,15,15,0,0,
0,0,0,2,2,2,3,3,5,7,9,12,12,12,12,12,12,12,12,12,12,17,25,25,0,0,
0,0,0,2,2,2,3,4,6,9,12,17,17,17,17,17,17,17,17,17,17,24,36,36,0,0,
0,0,0,3,3,3,4,5,7,11,15,22,22,22,22,22,22,22,22,22,22,31,46,46,0,0,
0,0,0,3,3,3,4,6,8,12,17,25,25,25,25,25,25,25,25,25,25,37,55,55,0,0,
0,0,0,3,3,3,5,6,9,14,20,29,29,29,29,29,29,29,29,29,29,43,64,64,0,0,
0,0,0,3,3,3,5,7,10,15,22,33,33,33,33,33,33,33,33,33,33,49,73,73,0,0,
0,0,2,2,2,2,2,4,4,6,8,8,8,8,8,8,8,8,8,8,8,10,15,15,0,0,
0,0,2,2,2,3,3,5,7,9,12,12,12,12,12,12,12,12,12,12,12,17,25,25,0,0,
0,0,2,2,2,3,4,6,9,12,17,17,17,17,17,17,17,17,17,17,17,24,36,36,0,0,
0,0,3,3,3,4,5,7,11,15,22,22,22,22,22,22,22,22,22,22,22,31,46,46,0,0,
0,0,3,3,3,4,6,8,12,17,25,25,25,25,25,25,25,25,25,25,25,37,55,55,0,0,
0,0,3,3,3,5,6,9,14,20,29,29,29,29,29,29,29,29,29,29,29,43,64,64,0,0,
0,0,3,3,3,5,7,10,15,22,33,33,33,33,33,33,33,33,33,33,33,49,73,73,0,0,
0,0,2,2,2,2,4,4,6,8,8,8,8,8,8,8,8,8,8,8,8,10,15,15,0,0,
0,0,2,2,3,3,5,7,9,12,12,12,12,12,12,12,12,12,12,12,12,17,25,25,0,0,
0,0,2,2,3,4,6,9,12,17,17,17,17,17,17,17,17,17,17,17,17,24,36,36,0,0,
0,0,3,3,4,5,7,11,15,22,22,22,22,22,22,22,22,22,22,22,22,31,46,46,0,0,
0,0,3,3,4,6,8,12,17,25,25,25,25,25,25,25,25,25,25,25,25,37,55,55,0,0,
0,0,3,3,5,6,9,14,20,29,29,29,29,29,29,29,29,29,29,29,29,43,64,64,0,0,
0,0,3,3,5,7,10,15,22,33,33,33,33,33,33,33,33,33,33,33,33,49,73,73,0,0)
AAMultipleTightenedre<-array(t,  dim=c(26,7,16), dimnames=list(c("0.010","0.015","0.025","0.040","0.065","0.10","0.15","0.25","0.40","0.65","1.0","1.5","2.5","4.0","6.5",
"10","15","25","40","65","100","150","250","400","650","1000"),
c("first","second","third","fourth","fifth","sixth","seventh"),
c("A","B","C","D","E","F","G","H","J","K","L","M","N","P","Q","R")
))
# Create array of acceptance numbers for Multiple Reduced Sampling
t<-c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,0,0,1,1,3,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,5,8,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,5,7,11,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,4,7,10,14,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,4,6,9,13,18,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,1,1,3,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,5,8,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,5,7,11,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,4,7,10,14,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,4,6,9,13,18,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,1,1,3,3,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,6,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,5,8,8,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,5,7,11,11,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,4,7,10,14,14,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,1,1,1,2,4,6,9,13,18,18,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,1,1,3,3,3,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,6,6,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,5,8,8,8,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,5,7,11,11,11,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,3,4,7,10,14,14,14,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,1,1,1,2,4,6,9,13,18,18,18,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,1,1,3,3,3,3,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,6,6,6,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,5,8,8,8,8,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,2,3,5,7,11,11,11,11,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,1,1,3,4,7,10,14,14,14,14,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,2,4,6,9,13,18,18,18,18,0,0,0,0,0,0,
0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,1,1,3,3,3,3,3,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,6,6,6,6,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,2,3,5,8,8,8,8,8,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,1,2,3,5,7,11,11,11,11,11,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,1,1,3,4,7,10,14,14,14,14,14,0,0,0,0,0,0,
0,0,0,0,0,0,0,1,1,1,2,4,6,9,13,18,18,18,18,18,0,0,0,0,0,0,
0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,-1,-1,-1,-1,0,0,1,1,3,3,3,3,3,3,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,2,3,6,6,6,6,6,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,1,2,3,5,8,8,8,8,8,8,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,1,2,3,5,7,11,11,11,11,11,11,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,3,4,7,10,14,14,14,14,14,14,0,0,0,0,0,0,
0,0,0,0,0,0,1,1,1,2,4,6,9,13,18,18,18,18,18,18,0,0,0,0,0,0,
0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,-1,-1,-1,-1,0,0,1,1,3,3,3,3,3,3,3,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,1,2,3,6,6,6,6,6,6,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,1,2,3,5,8,8,8,8,8,8,8,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,2,3,5,7,11,11,11,11,11,11,11,0,0,0,0,0,0,
0,0,0,0,0,0,0,1,1,3,4,7,10,14,14,14,14,14,14,14,0,0,0,0,0,0,
0,0,0,0,0,1,1,1,2,4,6,9,13,18,18,18,18,18,18,18,0,0,0,0,0,0,
0,0,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,-1,-1,-1,-1,0,0,1,1,3,3,3,3,3,3,3,3,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,1,2,3,6,6,6,6,6,6,6,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,2,3,5,8,8,8,8,8,8,8,8,0,0,0,0,0,0,
0,0,0,0,0,0,0,1,2,3,5,7,11,11,11,11,11,11,11,11,0,0,0,0,0,0,
0,0,0,0,0,0,1,1,3,4,7,10,14,14,14,14,14,14,14,14,0,0,0,0,0,0,
0,0,0,0,1,1,1,2,4,6,9,13,18,18,18,18,18,18,18,18,0,0,0,0,0,0,
0,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-1,-1,-1,-1,0,0,1,1,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,2,3,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,1,2,3,5,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,
0,0,0,0,0,0,1,2,3,5,7,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,
0,0,0,0,0,1,1,3,4,7,10,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,
0,0,0,1,1,1,2,4,6,9,13,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,
0,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,-1,-1,-1,0,0,1,1,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,
0,0,0,0,0,0,0,1,2,3,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,
0,0,0,0,0,0,1,2,3,5,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,
0,0,0,0,0,1,2,3,5,7,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,
0,0,0,0,1,1,3,4,7,10,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,
0,0,1,1,1,2,4,6,9,13,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,
0,0,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,-1,-1,0,0,1,1,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,
0,0,0,0,0,0,1,2,3,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,
0,0,0,0,0,1,2,3,5,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,
0,0,0,0,1,2,3,5,7,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,
0,0,0,1,1,3,4,7,10,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,
0,0,1,1,2,4,6,9,13,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0)
#################### I made check tables up to here############################
AAMultipleReducedac<-array(t,  dim=c(26,7,16), dimnames=list(c("0.010","0.015","0.025","0.040","0.065","0.10","0.15","0.25","0.40","0.65","1.0","1.5","2.5","4.0","6.5",
"10","15","25","40","65","100","150","250","400","650","1000"),
c("first","second","third","fourth","fifth","sixth","seventh"),
c("A","B","C","D","E","F","G","H","J","K","L","M","N","P","Q","R")
))
# Create array of rejection numbers for Multiple Reduced Sampling
t<-c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,2,2,3,3,4,4,5,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,2,2,3,4,5,6,7,9,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,2,2,4,5,6,8,9,12,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,3,3,5,6,7,10,12,15,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,3,3,6,7,8,11,13,17,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,3,3,6,7,9,12,15,20,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,3,3,7,8,10,14,17,22,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,2,2,2,3,3,4,4,5,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,2,2,3,3,4,5,6,7,9,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,2,2,3,4,5,6,8,9,12,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,3,3,4,5,6,7,10,12,15,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,3,3,4,6,7,8,11,13,17,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,3,3,5,6,7,9,12,15,20,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,3,3,5,7,8,10,14,17,22,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,2,2,2,3,3,4,4,5,6,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,2,2,3,3,4,5,6,7,9,9,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,2,2,3,4,5,6,8,9,12,12,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,3,3,4,5,6,7,10,12,15,15,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,3,3,4,6,7,8,11,13,17,17,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,3,3,5,6,7,9,12,15,20,20,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,3,3,5,7,8,10,14,17,22,22,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,2,2,2,3,3,4,4,5,6,6,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,2,2,3,3,4,5,6,7,9,9,9,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,2,2,3,4,5,6,8,9,12,12,12,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,3,3,4,5,6,7,10,12,15,15,15,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,3,3,4,6,7,8,11,13,17,17,17,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,3,3,5,6,7,9,12,15,20,20,20,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,3,3,5,7,8,10,14,17,22,22,22,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,2,2,2,3,3,4,4,5,6,6,6,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,2,2,3,3,4,5,6,7,9,9,9,9,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,2,2,3,4,5,6,8,9,12,12,12,12,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,3,3,4,5,6,7,10,12,15,15,15,15,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,3,3,4,6,7,8,11,13,17,17,17,17,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,3,3,5,6,7,9,12,15,20,20,20,20,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,3,3,5,7,8,10,14,17,22,22,22,22,0,0,0,0,0,0,
0,0,0,0,0,0,0,2,2,2,3,3,4,4,5,6,6,6,6,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,2,2,3,3,4,5,6,7,9,9,9,9,9,0,0,0,0,0,0,
0,0,0,0,0,0,0,2,2,3,4,5,6,8,9,12,12,12,12,12,0,0,0,0,0,0,
0,0,0,0,0,0,0,3,3,4,5,6,7,10,12,15,15,15,15,15,0,0,0,0,0,0,
0,0,0,0,0,0,0,3,3,4,6,7,8,11,13,17,17,17,17,17,0,0,0,0,0,0,
0,0,0,0,0,0,0,3,3,5,6,7,9,12,15,20,20,20,20,20,0,0,0,0,0,0,
0,0,0,0,0,0,0,3,3,5,7,8,10,14,17,22,22,22,22,22,0,0,0,0,0,0,
0,0,0,0,0,0,2,2,2,3,3,4,4,5,6,6,6,6,6,6,0,0,0,0,0,0,
0,0,0,0,0,0,2,2,3,3,4,5,6,7,9,9,9,9,9,9,0,0,0,0,0,0,
0,0,0,0,0,0,2,2,3,4,5,6,8,9,12,12,12,12,12,12,0,0,0,0,0,0,
0,0,0,0,0,0,3,3,4,5,6,7,10,12,15,15,15,15,15,15,0,0,0,0,0,0,
0,0,0,0,0,0,3,3,4,6,7,8,11,13,17,17,17,17,17,17,0,0,0,0,0,0,
0,0,0,0,0,0,3,3,5,6,7,9,12,15,20,20,20,20,20,20,0,0,0,0,0,0,
0,0,0,0,0,0,3,3,5,7,8,10,14,17,22,22,22,22,22,22,0,0,0,0,0,0,
0,0,0,0,0,2,2,2,3,3,4,4,5,6,6,6,6,6,6,6,0,0,0,0,0,0,
0,0,0,0,0,2,2,3,3,4,5,6,7,9,9,9,9,9,9,9,0,0,0,0,0,0,
0,0,0,0,0,2,2,3,4,5,6,8,9,12,12,12,12,12,12,12,0,0,0,0,0,0,
0,0,0,0,0,3,3,4,5,6,7,10,12,15,15,15,15,15,15,15,0,0,0,0,0,0,
0,0,0,0,0,3,3,4,6,7,8,11,13,17,17,17,17,17,17,17,0,0,0,0,0,0,
0,0,0,0,0,3,3,5,6,7,9,12,15,20,20,20,20,20,20,20,0,0,0,0,0,0,
0,0,0,0,0,3,3,5,7,8,10,14,17,22,22,22,22,22,22,22,0,0,0,0,0,0,
0,0,0,0,2,2,2,3,3,4,4,5,6,6,6,6,6,6,6,6,0,0,0,0,0,0,
0,0,0,0,2,2,3,3,4,5,6,7,9,9,9,9,9,9,9,9,0,0,0,0,0,0,
0,0,0,0,2,2,3,4,5,6,8,9,12,12,12,12,12,12,12,12,0,0,0,0,0,0,
0,0,0,0,3,3,4,5,6,7,10,12,15,15,15,15,15,15,15,15,0,0,0,0,0,0,
0,0,0,0,3,3,4,6,7,8,11,13,17,17,17,17,17,17,17,17,0,0,0,0,0,0,
0,0,0,0,3,3,5,6,7,9,12,15,20,20,20,20,20,20,20,20,0,0,0,0,0,0,
0,0,0,0,3,3,5,7,8,10,14,17,22,22,22,22,22,22,22,22,0,0,0,0,0,0,
0,0,0,2,2,2,3,3,4,4,5,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,
0,0,0,2,2,3,3,4,5,6,7,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,
0,0,0,2,2,3,4,5,6,8,9,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,
0,0,0,3,3,4,5,6,7,10,12,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,
0,0,0,3,3,4,6,7,8,11,13,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,
0,0,0,3,3,5,6,7,9,12,15,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,
0,0,0,3,3,5,7,8,10,14,17,22,22,22,22,22,22,22,22,22,0,0,0,0,0,0,
0,0,2,2,2,3,3,4,4,5,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,
0,0,2,2,3,3,4,5,6,7,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,
0,0,2,2,3,4,5,6,8,9,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,
0,0,3,3,4,5,6,7,10,12,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,
0,0,3,3,4,6,7,8,11,13,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,
0,0,3,3,5,6,7,9,12,15,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,
0,0,3,3,5,7,8,10,14,17,22,22,22,22,22,22,22,22,22,22,0,0,0,0,0,0,
0,0,2,2,3,3,4,4,5,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,
0,0,2,3,3,4,5,6,7,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,
0,0,2,3,4,5,6,8,9,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,
0,0,3,4,5,6,7,10,12,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,
0,0,3,4,6,7,8,11,13,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,
0,0,3,5,6,7,9,12,15,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,
0,0,3,5,7,8,10,14,17,22,22,22,22,22,22,22,22,22,22,22,0,0,0,0,0,0)
AAMultipleReducedre<-array(t,  dim=c(26,7,16), dimnames=list(c("0.010","0.015","0.025","0.040","0.065","0.10","0.15","0.25","0.40","0.65","1.0","1.5","2.5","4.0","6.5",
"10","15","25","40","65","100","150","250","400","650","1000"),
c("first","second","third","fourth","fifth","sixth","seventh"),
c("A","B","C","D","E","F","G","H","J","K","L","M","N","P","Q","R")
))
# Get Code letter from SSCodeLetters
codelet<-SSCodeLetters[dLOTS,dINSL]
if(PLAN == 1) {
#    print(PLAN)
#    print(dINSL)
#    print(dLOTS)
#    print(codelet)
#    print(dAQL)
ac<-AAMultipleNormalac[dAQL, ,codelet]
re<-AAMultipleNormalre[dAQL, ,codelet]
S<-AAMultipleNormalss[codelet, dAQL]
ss<-c(S,S,S,S,S,S,S)
names(ss)<-c("first","second","third","fourth","fifth","sixth","seventh")
} else if(PLAN == 2) {
ac<-AAMultipleTightenedac[dAQL,  ,codelet]
re<-AAMultipleTightenedre[dAQL, ,codelet]
S<-AAMultipleTightenedss[codelet, dAQL]
ss<-c(S,S,S,S,S,S,S)
names(ss)<-c("first","second","third","fourth","fifth","sixth","seventh")
} else if(PLAN == 3) {
ac<-AAMultipleReducedac[dAQL,  ,codelet]
re<-AAMultipleReducedre[dAQL, ,codelet]
S<-AAMultipleReducedss[codelet, dAQL ]
ss<-c(S,S,S,S,S,S,S)
names(ss)<-c("first","second","third","fourth","fifth","sixth","seventh")
}
# Print Results
note1<-"No multiple sampling exists. Use the corresponding single sampling plan"
note2<-"No multiple sampling exists. Use the corresponding double sampling plan"
if(S==-1) {note1
} else if(S==-2) {note2
} else if(S>0) {plan<-data.frame(n=ss,c=ac,r=re)
return(plan)
}
}
# simulate data at low and high levels of C
set.seed(3)
x1<-rnorm(8,10.155,.015)
x2<-rnorm(8,10.165,.015)
x<-c(x1,x2)
mean(x)
sd(x)
t.test(x1,x2,alternative="t",mu=0)
qqnorm(x)
y1<-rnorm(8,10.14,.015)
y2<-rnorm(8,10.18,.015)
y<-c(y1,y2)
mean(y)
sd(y)
t.test(y1,y2,alternative="t",mu=0)
qqnorm(y)
t.test(x,y,alternative="t",mu=0)
A<-rep(c(-1,1),16)
B<-rep(c(-1,-1,1,1),8)
C<-rep(c(-1,-1,-1,-1,1,1,1,1),4)
D<-c(rep(-1,16),rep(1,16))
ld<-length(D)
Content_Lime<-rep(" ",ld)
for (i in 1:ld) {
if(D[i]==-1) Content_Lime[i]<-"5%"
else Content_Lime[i]<-"1%"
}
F<-c(rep(-1,8),rep(1,8),rep(-1,8),rep(1,8))
Furnace_position<-rep(" ",ld)
for (i in 1:ld) {
if(H[i]==-1) Furnace_position[i]<-"outside"
else Furnace_position[i]<-"center"
}
E<-A*B*C*D
resp<-c(x1,x2,y1,y2)
resp2<-c(x2,x1,y2,y1)
mod<-lm(resp~(A+B+C+D+F)^2)
summary(mod)
library(daewr)
fullnormal(coef(mod)[-1],alpha=.01,refline="FALSE")
interaction.plot(Furnace_position,Content_Lime,resp)
F1<-data.frame(A,B,C,D,E,F,resp,resp2)
F<-F1[order(F,D,C,B,A)]
F
F1
F<-c(rep(-1,8),rep(1,8),rep(-1,8),rep(1,8))
Furnace_position<-rep(" ",ld)
for (i in 1:ld) {
if(F[i]==-1) Furnace_position[i]<-"outside"
else Furnace_position[i]<-"center"
}
Content_Lime<-rep(" ",ld)
for (i in 1:ld) {
if(D[i]==-1) Content_Lime[i]<-"5%"
else Content_Lime[i]<-"1%"
}
F<-c(rep(-1,8),rep(1,8),rep(-1,8),rep(1,8))
Furnace_position<-rep(" ",ld)
for (i in 1:ld) {
if(F[i]==-1) Furnace_position[i]<-"outside"
else Furnace_position[i]<-"center"
}
E<-A*B*C*D
resp<-c(x1,x2,y1,y2)
resp2<-c(x2,x1,y2,y1)
mod<-lm(resp~(A+B+C+D+F)^2)
summary(mod)
library(daewr)
fullnormal(coef(mod)[-1],alpha=.01,refline="FALSE")
interaction.plot(Furnace_position,Content_Lime,resp)
library(FrF2)
DesF<-FrF2(32,6,generators="ABCDE")
DesF
DesF<-FrF2(32,6,generators="ABCDE",randomize=FALSE)
DesF
library(FrF2)
DesF<-FrF2(32,6,factor.names=c("A","B","C","D","F","E"),generators="ABCDF",randomize=FALSE)
library(FrF2)
DesF<-FrF2(32,6,factor.names=c(A="",B="",C="",D="",F="",E=""),generators="ABCDF",randomize=FALSE)
DesF<-FrF2(32,6,factor.names=c(A="",B="",C="",D="",F="",E=""),generators=list(c(1,2,3,4,5)),randomize=FALSE)
DesF
library(FrF2)
DesF<-FrF2(32,factor.names=c(A="",B="",C="",D="",F="",E=""),generators=list(c(1,2,3,4,5)),randomize=FALSE)
DesF
library(FrF2)
DesF<-FrF2(32,factor.names=list(A="",B="",C="",D="",F="",E=""),generators=list(c(1,2,3,4,5)),randomize=FALSE)
DesF
library(FrF2)
DesF<-FrF2(32,factor.names=list(A="",B="",C="",D="",E="",F=""),generators=list(c(1,2,3,4,6)),randomize=FALSE)
library(FrF2)
DesF<-FrF2(32,factor.names=list(A="",B="",C="",D="",E="",F=""),generators=list(c(1,2,3,4,5)),randomize=FALSE)
DesF
library(FrF2)
DesF<-FrF2(32,factor.names=list(A="",B="",C="",D="",F="",E=""),generators=list(c(1,2,3,4,5)),randomize=FALSE)
DesF
library(FrF2)
DesF<-FrF2(32,factor.names=list(A="",B="",C="",D="",F="",E=""),generators=list(-c(1,2,3,4,5)),randomize=FALSE)
DesF
mod<-lm(resp~(A+B+C+D+F)^2,data=DesF)
summary(mod)
mod<-lm(resp~(A+B+C+D+E+F)^2,data=DesF)
summary(mod)
mod<-lm(resp~(.)^2,data=DesF)
summary(mod)
mod<-lm(resp~(.)^3,data=DesF)
summary(mod)
library(daewr)
fullnormal(coef(mod)[-1],alpha=.01,refline="FALSE")
fullnormal(coef(mod)[2:32],alpha=.01,refline="FALSE")
interaction.plot(Furnace_position,Content_Lime,resp)
resp
library(FrF2)
DesF<-FrF2(32,factor.names=list(A="",B="",C="",D="",F="",E=""),
generators=list(-c(1,2,3,4,5)),randomize=FALSE)
y<-c(10.14057,10.15061,10.15888,10.13772,10.15794,10.15545,10.15628,10.17175,
10.14672,10.18401,10.15383,10.14803,10.15425,10.16879,10.16728,10.16039,
10.12570,10.13028,10.15836,10.14300,10.13132,10.12587,10.13694,10.11500,
10.17273,10.16888,10.19741,10.19518,10.17892,10.16295,10.19351,10.19278)
mod<-lm(y~(.)^3,data=DesF)
summary(mod)
aliases(mod)
library(daewr)
fullnormal(coef(mod)[2:32],alpha=.01,refline="FALSE")
interaction.plot(Furnace_position,Content_Lime,resp)
usethis::use_vignette("AQLSchemes")
install.packages("R.rsp")
install.packages("~/r-forge-project/daewr/pkg/AQLSchemes_1.5.6.zip", repos = NULL, type = "win.binary")
install.packages("~/r-forge-project/daewr/pkg/AQLSchemes_1.5.6.zip", repos = NULL, type = "win.binary")
install.packages("~/r-forge-project/daewr/pkg/AQLSchemes_1.5.8.zip", repos = NULL, type = "win.binary")
install.packages("AQLSchemes", repos="http://R-Forge.R-project.org")
install.packages("AQLSchemes", repos="http://R-Forge.R-project.org")
install.packages("~/r-forge-project/daewr/pkg/AQLSchemes_1.5.9.zip", repos = NULL, type = "win.binary")
install.packages("~/r-forge-project/daewr/pkg/AQLSchemes_1.5.9.zip", repos = NULL, type = "win.binary")
install.packages("Matrix")
install.packages("~/r-forge-project/daewr/pkg/AQLSchemes_1.5.10.zip", repos = NULL, type = "win.binary")
install.packages("~/r-forge-project/daewr/pkg/AQLSchemes_1.5.10.zip", repos = NULL, type = "win.binary")
usethis::use_vignette("my-vignette")
install.packages("usethis")
usethis::use_vignette("my-vignette")
usethis::use_vignette("my-vignette")
install.packages("~/r-forge-project/daewr/pkg/AQLSchemes_1.5.10.zip", repos = NULL, type = "win.binary")
library("AQLSchemes", lib.loc="~/R/win-library/3.6")
AASingle('Normal')
midterm<-c(77.5,84.2,78.3,68.3,98.3,100,95.8,95.8,79.2,95.8,85.8)
stem(midterm)
dotchart(midterm)
stripchart(midterm)
install.packages("AQLSchemes", repos="http://R-Forge.R-project.org")
install.packages("AQLSchemes", repos = "http://R-Forge.R-project.org")
install.packages("AQLSchemes", repos="http://R-Forge.R-project.org")
install.packages("~/r-forge-project/daewr/pkg/AQLSchemes_1.5.14.zip", repos = NULL, type = "win.binary")
install.packages("~/r-forge-project/daewr/pkg/AQLSchemes_1.5.15.zip", repos = NULL, type = "win.binary")
install.packages("~/r-forge-project/daewr/pkg/AQLSchemes_1.5.16.zip", repos = NULL, type = "win.binary")
=======
>>>>>>> .r181
